// Mocks generated by Mockito 5.2.0 from annotations
// in news_sorter/test/domain/use_case/keyword/get_keywords_use_case_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:news_sorter/core/result.dart' as _i2;
import 'package:news_sorter/domain/model/keyword/keyword_info.dart' as _i5;
import 'package:news_sorter/domain/repository/keyword/keyword_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResult_0<T> extends _i1.Fake implements _i2.Result<T> {}

/// A class which mocks [KeywordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeywordRepository extends _i1.Mock implements _i3.KeywordRepository {
  MockKeywordRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.KeywordInfo>> getKeywordById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getKeywordById, [id]),
              returnValue: Future<_i2.Result<_i5.KeywordInfo>>.value(
                  _FakeResult_0<_i5.KeywordInfo>()))
          as _i4.Future<_i2.Result<_i5.KeywordInfo>>);
  @override
  _i4.Future<List<_i5.KeywordInfo>> getKeywords() => (super.noSuchMethod(
          Invocation.method(#getKeywords, []),
          returnValue: Future<List<_i5.KeywordInfo>>.value(<_i5.KeywordInfo>[]))
      as _i4.Future<List<_i5.KeywordInfo>>);
  @override
  _i4.Future<void> insertKeyword(_i5.KeywordInfo? keyword) =>
      (super.noSuchMethod(Invocation.method(#insertKeyword, [keyword]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updateKeyword(_i5.KeywordInfo? keyword) =>
      (super.noSuchMethod(Invocation.method(#updateKeyword, [keyword]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteKeyword(_i5.KeywordInfo? keyword) =>
      (super.noSuchMethod(Invocation.method(#deleteKeyword, [keyword]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
